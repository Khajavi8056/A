//+------------------------------------------------------------------+
//|                                              HipoFibonacciTest.mq5 |
//|                              محصولی از: Hipo Algorithm           |
//|                              نسخه: ۱.۰.۰                          |
//|                              تاریخ: ۲۰۲۵/۰۷/۲۵                   |
//+------------------------------------------------------------------+

#property copyright "Hipo Algorithm"
#property link      "https://hipoalgorithm.com"
#property version   "1.0.0"

//+------------------------------------------------------------------+
//| شامل کردن کتابخانه HipoFibonacci                                |
//+------------------------------------------------------------------+
#include <HipoFibonacci.mqh>

//+------------------------------------------------------------------+
//| متغیرهای سراسری                                                |
//+------------------------------------------------------------------+
CStructureManager g_manager;

//+------------------------------------------------------------------+
//| تابع اولیه‌سازی اکسپرت                                          |
//+------------------------------------------------------------------+
int OnInit()
{
   // فعال‌سازی حالت تست
   g_manager.EnableTestMode(true);
   
   // راه‌اندازی کتابخانه
   if(!g_manager.HFiboOnInit())
   {
      Print("خطا در راه‌اندازی HipoFibonacci");
      return(INIT_FAILED);
   }
   
   Print("اکسپرت تست HipoFibonacci راه‌اندازی شد");
   return(INIT_SUCCEEDED);
}

//+------------------------------------------------------------------+
//| تابع خاتمه اکسپرت                                              |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
{
   g_manager.HFiboOnDeinit(reason);
   Print("اکسپرت تست HipoFibonacci متوقف شد. دلیل: ", reason);
}

//+------------------------------------------------------------------+
//| تابع تیک                                                       |
//+------------------------------------------------------------------+
void OnTick()
{
   g_manager.HFiboOnTick();
   
   // بررسی سیگنال‌ها
   SSignal signal = g_manager.HFiboCheckSignal();
   if(signal.type != "")
   {
      Print("سیگنال دریافت شد: نوع=", signal.type, ", ID=", signal.id);
      // تأیید سیگنال برای جلوگیری از تکرار
      g_manager.HFiboAcknowledgeSignal(signal.id);
   }
}

//+------------------------------------------------------------------+
//| تابع رویداد چارت                                               |
//+------------------------------------------------------------------+
void OnChartEvent(const int id, const long &lparam, const double &dparam, const string &sparam)
{
   g_manager.HFiboOnChartEvent(id, lparam, dparam, sparam);
}

//+------------------------------------------------------------------+
//| تابع تایمر                                                     |
//+------------------------------------------------------------------+
void OnTimer()
{
   // در صورت نیاز می‌توانید عملکردهای دوره‌ای را اینجا اضافه کنید
}
